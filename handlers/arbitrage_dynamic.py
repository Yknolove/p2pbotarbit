"""
–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã—Ö —Å–¥–µ–ª–æ–∫.

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–ª–±–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç
–ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Å–¥–µ–ª–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ —Ñ–∏–ª—å—Ç—Ä–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ß—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å
–∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
`callback_data` ‚Äî ``arbitrage_deals``.
"""

from aiogram import Router, F
from aiogram.types import CallbackQuery
import json
from config import FILTERS_FILE


# –†–æ—É—Ç–µ—Ä –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∞—Ä–±–∏—Ç—Ä–∞–∂–∞.
router = Router()


@router.callback_query(F.data == "arbitrage_deals")
async def show_arbitrage_deals(call: CallbackQuery) -> None:
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–¥–µ–ª–æ–∫, –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ–¥ —Ñ–∏–ª—å—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ï—Å–ª–∏
    —Ñ–∏–ª—å—Ç—Ä –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–æ–π /filter.
    """
    user_id = str(call.from_user.id)
    try:
        with open(FILTERS_FILE, "r") as f:
            filters = json.load(f)
        user_filter = filters.get(user_id)
    except (FileNotFoundError, json.JSONDecodeError):
        user_filter = None

    if not user_filter:
        await call.message.edit_text(
            "üìä –ê—Ä–±–∏—Ç—Ä–∞–∂ \n\n"
            "‚ùó –£ –≤–∞—Å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Ñ–∏–ª—å—Ç—Ä.\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /filter, —á—Ç–æ–±—ã –µ–≥–æ —Å–æ–∑–¥–∞—Ç—å.",
            parse_mode="HTML",
        )
        return

    # –ó–∞–≥–ª—É—à–∫–∞ ‚Äî –ø—Ä–∏–º–µ—Ä —Å–¥–µ–ª–æ–∫
    example_deals = [
        {"buy": 41.10, "sell": 42.85, "volume": 95, "url": "https://example.com/deal1"},
        {"buy": 40.90, "sell": 43.00, "volume": 100, "url": "https://example.com/deal2"},
    ]

    matched: list[dict] = []
    for deal in example_deals:
        if (
            deal["buy"] <= user_filter["buy_price"]
            and deal["sell"] >= user_filter["sell_price"]
            and deal["volume"] <= user_filter["volume"]
        ):
            matched.append(deal)

    if not matched:
        await call.message.edit_text(
            "üìä –ê—Ä–±–∏—Ç—Ä–∞–∂ \n\n"
            "‚ö†Ô∏è –°–µ–π—á–∞—Å –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–¥–µ–ª–æ–∫ –ø–æ –≤–∞—à–µ–º—É —Ñ–∏–ª—å—Ç—Ä—É.",
            parse_mode="HTML",
        )
        return

    text = "üìä –ù–∞–π–¥–µ–Ω–æ —Å–¥–µ–ª–æ–∫: \n\n"
    for deal in matched:
        url_text = f"üîó <a href=\"{deal['url']}\">–û—Ç–∫—Ä—ã—Ç—å –æ—Ä–¥–µ—Ä</a>" if deal.get("url") else ""
        text += (
            f"üü¢ –ö—É–ø–∏—Ç—å –ø–æ: {deal['buy']} \n"
            f"üî¥ –ü—Ä–æ–¥–∞—Ç—å –ø–æ: {deal['sell']} \n"
            f"üíµ –û–±—ä—ë–º: ${deal['volume']}\n"
            f"{url_text}\n\n"
        )

    await call.message.edit_text(text, parse_mode="HTML")